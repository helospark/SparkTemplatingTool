<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="65" passed="65">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="20450" started-at="2017-03-29T19:21:56Z" finished-at="2017-03-29T19:22:17Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="20450" started-at="2017-03-29T19:21:56Z" finished-at="2017-03-29T19:22:17Z">
      <class name="com.helospark.SparkTemplatingPlugin.integration.examplescript.ExampleScriptInitializationIT">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.examplescript.ExampleScriptInitializationIT@61f8bee4]" name="setUp" is-config="true" duration-ms="121" started-at="2017-03-29T21:22:08Z" finished-at="2017-03-29T21:22:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testInitializeShouldCreateScriptIfDidNotExistEarlier()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.examplescript.ExampleScriptInitializationIT@61f8bee4]" name="testInitializeShouldCreateScriptIfDidNotExistEarlier" duration-ms="8" started-at="2017-03-29T21:22:08Z" finished-at="2017-03-29T21:22:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitializeShouldCreateScriptIfDidNotExistEarlier -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.examplescript.ExampleScriptInitializationIT@61f8bee4]" name="setUp" is-config="true" duration-ms="9" started-at="2017-03-29T21:22:08Z" finished-at="2017-03-29T21:22:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testInitializeShouldCreateScriptWithOriginalNameWhenScriptWasModifiedAndScriptDoesNotExistWithOriginalCommandName()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.examplescript.ExampleScriptInitializationIT@61f8bee4]" name="testInitializeShouldCreateScriptWithOriginalNameWhenScriptWasModifiedAndScriptDoesNotExistWithOriginalCommandName" duration-ms="7" started-at="2017-03-29T21:22:08Z" finished-at="2017-03-29T21:22:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitializeShouldCreateScriptWithOriginalNameWhenScriptWasModifiedAndScriptDoesNotExistWithOriginalCommandName -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.examplescript.ExampleScriptInitializationIT@61f8bee4]" name="setUp" is-config="true" duration-ms="5" started-at="2017-03-29T21:22:08Z" finished-at="2017-03-29T21:22:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testInitializeShouldCreateScriptWithUniqueNameWhenScriptWasModifiedAndScriptAlreadyExistWithOriginalCommandName()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.examplescript.ExampleScriptInitializationIT@61f8bee4]" name="testInitializeShouldCreateScriptWithUniqueNameWhenScriptWasModifiedAndScriptAlreadyExistWithOriginalCommandName" duration-ms="5" started-at="2017-03-29T21:22:08Z" finished-at="2017-03-29T21:22:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitializeShouldCreateScriptWithUniqueNameWhenScriptWasModifiedAndScriptAlreadyExistWithOriginalCommandName -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.examplescript.ExampleScriptInitializationIT@61f8bee4]" name="setUp" is-config="true" duration-ms="5" started-at="2017-03-29T21:22:08Z" finished-at="2017-03-29T21:22:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testInitializeShouldNotCallScriptRepositoryWhenUserHasLatestVersion()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.examplescript.ExampleScriptInitializationIT@61f8bee4]" name="testInitializeShouldNotCallScriptRepositoryWhenUserHasLatestVersion" duration-ms="5" started-at="2017-03-29T21:22:08Z" finished-at="2017-03-29T21:22:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitializeShouldNotCallScriptRepositoryWhenUserHasLatestVersion -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.examplescript.ExampleScriptInitializationIT@61f8bee4]" name="setUp" is-config="true" duration-ms="5" started-at="2017-03-29T21:22:08Z" finished-at="2017-03-29T21:22:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testInitializeShouldNotCreateScriptIfAlreadyCreatedInCurrentVersion()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.examplescript.ExampleScriptInitializationIT@61f8bee4]" name="testInitializeShouldNotCreateScriptIfAlreadyCreatedInCurrentVersion" duration-ms="3" started-at="2017-03-29T21:22:08Z" finished-at="2017-03-29T21:22:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitializeShouldNotCreateScriptIfAlreadyCreatedInCurrentVersion -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.examplescript.ExampleScriptInitializationIT@61f8bee4]" name="setUp" is-config="true" duration-ms="5" started-at="2017-03-29T21:22:08Z" finished-at="2017-03-29T21:22:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testInitializeShouldNotThrowAnyExceptionIfInternallyExceptionOccurres()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.examplescript.ExampleScriptInitializationIT@61f8bee4]" name="testInitializeShouldNotThrowAnyExceptionIfInternallyExceptionOccurres" duration-ms="30" started-at="2017-03-29T21:22:08Z" finished-at="2017-03-29T21:22:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitializeShouldNotThrowAnyExceptionIfInternallyExceptionOccurres -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.examplescript.ExampleScriptInitializationIT@61f8bee4]" name="setUp" is-config="true" duration-ms="8" started-at="2017-03-29T21:22:08Z" finished-at="2017-03-29T21:22:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testInitializeShouldNowThrowException()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.examplescript.ExampleScriptInitializationIT@61f8bee4]" name="testInitializeShouldNowThrowException" duration-ms="18" started-at="2017-03-29T21:22:08Z" finished-at="2017-03-29T21:22:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitializeShouldNowThrowException -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.examplescript.ExampleScriptInitializationIT@61f8bee4]" name="setUp" is-config="true" duration-ms="17" started-at="2017-03-29T21:22:08Z" finished-at="2017-03-29T21:22:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testInitializeShouldUpdateEarlierRevisionWhenItWasNotModifiedByUser()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.examplescript.ExampleScriptInitializationIT@61f8bee4]" name="testInitializeShouldUpdateEarlierRevisionWhenItWasNotModifiedByUser" duration-ms="11" started-at="2017-03-29T21:22:08Z" finished-at="2017-03-29T21:22:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitializeShouldUpdateEarlierRevisionWhenItWasNotModifiedByUser -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.examplescript.ExampleScriptInitializationIT@61f8bee4]" name="setUp" is-config="true" duration-ms="11" started-at="2017-03-29T21:22:08Z" finished-at="2017-03-29T21:22:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testInitializeShouldUpdateScriptWhenUserHasEarlierNotModifiedRevision()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.examplescript.ExampleScriptInitializationIT@61f8bee4]" name="testInitializeShouldUpdateScriptWhenUserHasEarlierNotModifiedRevision" duration-ms="2" started-at="2017-03-29T21:22:08Z" finished-at="2017-03-29T21:22:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitializeShouldUpdateScriptWhenUserHasEarlierNotModifiedRevision -->
      </class> <!-- com.helospark.SparkTemplatingPlugin.integration.examplescript.ExampleScriptInitializationIT -->
      <class name="com.helospark.SparkTemplatingPlugin.integration.completition.ContentAssistIT">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.completition.ContentAssistIT@67b92f0a]" name="setUp" is-config="true" duration-ms="6768" started-at="2017-03-29T21:21:56Z" finished-at="2017-03-29T21:22:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testFailedContentAssistAtEndOfUserTypeStringShouldNotShowGivenSuggestion(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.completition.ContentAssistIT@67b92f0a]" name="testFailedContentAssistAtEndOfUserTypeStringShouldNotShowGivenSuggestion" duration-ms="8240" started-at="2017-03-29T21:22:08Z" data-provider="failedContentAssists" finished-at="2017-03-29T21:22:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[resu]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SttAnnotation]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFailedContentAssistAtEndOfUserTypeStringShouldNotShowGivenSuggestion -->
        <test-method status="PASS" signature="testFailedContentAssistAtEndOfUserTypeStringShouldNotShowGivenSuggestion(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.completition.ContentAssistIT@67b92f0a]" name="testFailedContentAssistAtEndOfUserTypeStringShouldNotShowGivenSuggestion" duration-ms="8" started-at="2017-03-29T21:22:16Z" data-provider="failedContentAssists" finished-at="2017-03-29T21:22:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ra]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[result]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFailedContentAssistAtEndOfUserTypeStringShouldNotShowGivenSuggestion -->
        <test-method status="PASS" signature="testFailedContentAssistAtEndOfUserTypeStringShouldNotShowGivenSuggestion(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.completition.ContentAssistIT@67b92f0a]" name="testFailedContentAssistAtEndOfUserTypeStringShouldNotShowGivenSuggestion" duration-ms="31" started-at="2017-03-29T21:22:16Z" data-provider="failedContentAssists" finished-at="2017-03-29T21:22:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Stt]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[result]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFailedContentAssistAtEndOfUserTypeStringShouldNotShowGivenSuggestion -->
        <test-method status="PASS" signature="testFailedContentAssistAtEndOfUserTypeStringShouldNotShowGivenSuggestion(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.completition.ContentAssistIT@67b92f0a]" name="testFailedContentAssistAtEndOfUserTypeStringShouldNotShowGivenSuggestion" duration-ms="55" started-at="2017-03-29T21:22:16Z" data-provider="failedContentAssists" finished-at="2017-03-29T21:22:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[result.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[result]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFailedContentAssistAtEndOfUserTypeStringShouldNotShowGivenSuggestion -->
        <test-method status="PASS" signature="testFailedContentAssistAtEndOfUserTypeStringShouldNotShowGivenSuggestion(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.completition.ContentAssistIT@67b92f0a]" name="testFailedContentAssistAtEndOfUserTypeStringShouldNotShowGivenSuggestion" duration-ms="5" started-at="2017-03-29T21:22:16Z" data-provider="failedContentAssists" finished-at="2017-03-29T21:22:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[result.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SttAnnotation]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFailedContentAssistAtEndOfUserTypeStringShouldNotShowGivenSuggestion -->
        <test-method status="PASS" signature="testFailedContentAssistAtEndOfUserTypeStringShouldNotShowGivenSuggestion(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.completition.ContentAssistIT@67b92f0a]" name="testFailedContentAssistAtEndOfUserTypeStringShouldNotShowGivenSuggestion" duration-ms="4" started-at="2017-03-29T21:22:16Z" data-provider="failedContentAssists" finished-at="2017-03-29T21:22:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getClass()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFailedContentAssistAtEndOfUserTypeStringShouldNotShowGivenSuggestion -->
        <test-method status="PASS" signature="testFailedContentAssistAtEndOfUserTypeStringShouldNotShowGivenSuggestion(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.completition.ContentAssistIT@67b92f0a]" name="testFailedContentAssistAtEndOfUserTypeStringShouldNotShowGivenSuggestion" duration-ms="5" started-at="2017-03-29T21:22:16Z" data-provider="failedContentAssists" finished-at="2017-03-29T21:22:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getClass()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFailedContentAssistAtEndOfUserTypeStringShouldNotShowGivenSuggestion -->
        <test-method status="PASS" signature="testFailedContentAssistAtEndOfUserTypeStringShouldNotShowGivenSuggestion(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.completition.ContentAssistIT@67b92f0a]" name="testFailedContentAssistAtEndOfUserTypeStringShouldNotShowGivenSuggestion" duration-ms="4" started-at="2017-03-29T21:22:16Z" data-provider="failedContentAssists" finished-at="2017-03-29T21:22:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{
SttType localVariable;
}
loc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[localVariable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFailedContentAssistAtEndOfUserTypeStringShouldNotShowGivenSuggestion -->
        <test-method status="PASS" signature="testSuccesfulContentAssistAtEndOfUserTypeString(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.completition.ContentAssistIT@67b92f0a]" name="testSuccesfulContentAssistAtEndOfUserTypeString" duration-ms="4" started-at="2017-03-29T21:22:16Z" data-provider="succesfulContentAssists" finished-at="2017-03-29T21:22:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[result]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccesfulContentAssistAtEndOfUserTypeString -->
        <test-method status="PASS" signature="testSuccesfulContentAssistAtEndOfUserTypeString(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.completition.ContentAssistIT@67b92f0a]" name="testSuccesfulContentAssistAtEndOfUserTypeString" duration-ms="3" started-at="2017-03-29T21:22:16Z" data-provider="succesfulContentAssists" finished-at="2017-03-29T21:22:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[resu]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[result]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccesfulContentAssistAtEndOfUserTypeString -->
        <test-method status="PASS" signature="testSuccesfulContentAssistAtEndOfUserTypeString(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.completition.ContentAssistIT@67b92f0a]" name="testSuccesfulContentAssistAtEndOfUserTypeString" duration-ms="5" started-at="2017-03-29T21:22:16Z" data-provider="succesfulContentAssists" finished-at="2017-03-29T21:22:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[SttAnnot]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SttAnnotation]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccesfulContentAssistAtEndOfUserTypeString -->
        <test-method status="PASS" signature="testSuccesfulContentAssistAtEndOfUserTypeString(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.completition.ContentAssistIT@67b92f0a]" name="testSuccesfulContentAssistAtEndOfUserTypeString" duration-ms="4" started-at="2017-03-29T21:22:17Z" data-provider="succesfulContentAssists" finished-at="2017-03-29T21:22:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[res]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[result]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccesfulContentAssistAtEndOfUserTypeString -->
        <test-method status="PASS" signature="testSuccesfulContentAssistAtEndOfUserTypeString(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.completition.ContentAssistIT@67b92f0a]" name="testSuccesfulContentAssistAtEndOfUserTypeString" duration-ms="4" started-at="2017-03-29T21:22:17Z" data-provider="succesfulContentAssists" finished-at="2017-03-29T21:22:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[result]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[result]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccesfulContentAssistAtEndOfUserTypeString -->
        <test-method status="PASS" signature="testSuccesfulContentAssistAtEndOfUserTypeString(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.completition.ContentAssistIT@67b92f0a]" name="testSuccesfulContentAssistAtEndOfUserTypeString" duration-ms="4" started-at="2017-03-29T21:22:17Z" data-provider="succesfulContentAssists" finished-at="2017-03-29T21:22:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Stt]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SttAnnotation]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccesfulContentAssistAtEndOfUserTypeString -->
        <test-method status="PASS" signature="testSuccesfulContentAssistAtEndOfUserTypeString(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.completition.ContentAssistIT@67b92f0a]" name="testSuccesfulContentAssistAtEndOfUserTypeString" duration-ms="4" started-at="2017-03-29T21:22:17Z" data-provider="succesfulContentAssists" finished-at="2017-03-29T21:22:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Stt]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SttType]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccesfulContentAssistAtEndOfUserTypeString -->
        <test-method status="PASS" signature="testSuccesfulContentAssistAtEndOfUserTypeString(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.completition.ContentAssistIT@67b92f0a]" name="testSuccesfulContentAssistAtEndOfUserTypeString" duration-ms="3" started-at="2017-03-29T21:22:17Z" data-provider="succesfulContentAssists" finished-at="2017-03-29T21:22:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Stt]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SttMethod]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccesfulContentAssistAtEndOfUserTypeString -->
        <test-method status="PASS" signature="testSuccesfulContentAssistAtEndOfUserTypeString(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.completition.ContentAssistIT@67b92f0a]" name="testSuccesfulContentAssistAtEndOfUserTypeString" duration-ms="5" started-at="2017-03-29T21:22:17Z" data-provider="succesfulContentAssists" finished-at="2017-03-29T21:22:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Stt]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SttJavaProject]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccesfulContentAssistAtEndOfUserTypeString -->
        <test-method status="PASS" signature="testSuccesfulContentAssistAtEndOfUserTypeString(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.completition.ContentAssistIT@67b92f0a]" name="testSuccesfulContentAssistAtEndOfUserTypeString" duration-ms="34" started-at="2017-03-29T21:22:17Z" data-provider="succesfulContentAssists" finished-at="2017-03-29T21:22:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Stt]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SttField]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccesfulContentAssistAtEndOfUserTypeString -->
        <test-method status="PASS" signature="testSuccesfulContentAssistAtEndOfUserTypeString(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.completition.ContentAssistIT@67b92f0a]" name="testSuccesfulContentAssistAtEndOfUserTypeString" duration-ms="11" started-at="2017-03-29T21:22:17Z" data-provider="succesfulContentAssists" finished-at="2017-03-29T21:22:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[result.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getExposedName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccesfulContentAssistAtEndOfUserTypeString -->
        <test-method status="PASS" signature="testSuccesfulContentAssistAtEndOfUserTypeString(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.completition.ContentAssistIT@67b92f0a]" name="testSuccesfulContentAssistAtEndOfUserTypeString" duration-ms="9" started-at="2017-03-29T21:22:17Z" data-provider="succesfulContentAssists" finished-at="2017-03-29T21:22:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[result.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[append(String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccesfulContentAssistAtEndOfUserTypeString -->
        <test-method status="PASS" signature="testSuccesfulContentAssistAtEndOfUserTypeString(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.completition.ContentAssistIT@67b92f0a]" name="testSuccesfulContentAssistAtEndOfUserTypeString" duration-ms="23" started-at="2017-03-29T21:22:17Z" data-provider="succesfulContentAssists" finished-at="2017-03-29T21:22:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[result.getExposedName().]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[toString()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccesfulContentAssistAtEndOfUserTypeString -->
        <test-method status="PASS" signature="testSuccesfulContentAssistAtEndOfUserTypeString(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.completition.ContentAssistIT@67b92f0a]" name="testSuccesfulContentAssistAtEndOfUserTypeString" duration-ms="14" started-at="2017-03-29T21:22:17Z" data-provider="succesfulContentAssists" finished-at="2017-03-29T21:22:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[globalConfig.S]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SCRIPT_NAME]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccesfulContentAssistAtEndOfUserTypeString -->
        <test-method status="PASS" signature="testSuccesfulContentAssistAtEndOfUserTypeString(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.completition.ContentAssistIT@67b92f0a]" name="testSuccesfulContentAssistAtEndOfUserTypeString" duration-ms="6" started-at="2017-03-29T21:22:17Z" data-provider="succesfulContentAssists" finished-at="2017-03-29T21:22:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[globalConfig.s]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SCRIPT_NAME]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccesfulContentAssistAtEndOfUserTypeString -->
        <test-method status="PASS" signature="testSuccesfulContentAssistAtEndOfUserTypeString(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.completition.ContentAssistIT@67b92f0a]" name="testSuccesfulContentAssistAtEndOfUserTypeString" duration-ms="8" started-at="2017-03-29T21:22:17Z" data-provider="succesfulContentAssists" finished-at="2017-03-29T21:22:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[codeForm]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[codeFormatter]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccesfulContentAssistAtEndOfUserTypeString -->
        <test-method status="PASS" signature="testSuccesfulContentAssistAtEndOfUserTypeString(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.completition.ContentAssistIT@67b92f0a]" name="testSuccesfulContentAssistAtEndOfUserTypeString" duration-ms="4" started-at="2017-03-29T21:22:17Z" data-provider="succesfulContentAssists" finished-at="2017-03-29T21:22:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[codeFormatter.form]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[formatCurrentCompilationUnit()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccesfulContentAssistAtEndOfUserTypeString -->
        <test-method status="PASS" signature="testSuccesfulContentAssistAtEndOfUserTypeString(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.completition.ContentAssistIT@67b92f0a]" name="testSuccesfulContentAssistAtEndOfUserTypeString" duration-ms="6" started-at="2017-03-29T21:22:17Z" data-provider="succesfulContentAssists" finished-at="2017-03-29T21:22:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[SttType localVariable;
loc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[localVariable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccesfulContentAssistAtEndOfUserTypeString -->
      </class> <!-- com.helospark.SparkTemplatingPlugin.integration.completition.ContentAssistIT -->
      <class name="com.helospark.SparkTemplatingPlugin.integration.exportimport.ExportImportIT">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.exportimport.ExportImportIT@7fac631b]" name="setUp" is-config="true" duration-ms="176" started-at="2017-03-29T21:22:07Z" finished-at="2017-03-29T21:22:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testExportThenImportShouldLoadSameDataAsExported()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.exportimport.ExportImportIT@7fac631b]" name="testExportThenImportShouldLoadSameDataAsExported" duration-ms="352" started-at="2017-03-29T21:22:07Z" finished-at="2017-03-29T21:22:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExportThenImportShouldLoadSameDataAsExported -->
      </class> <!-- com.helospark.SparkTemplatingPlugin.integration.exportimport.ExportImportIT -->
      <class name="com.helospark.SparkTemplatingPlugin.integration.execution.SimpleInlineProgramExecutionIT">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.execution.SimpleInlineProgramExecutionIT@4f970963]" name="beforeMethod" is-config="true" duration-ms="12" started-at="2017-03-29T21:22:06Z" finished-at="2017-03-29T21:22:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testSimpleStringProgramWithExpectedResult(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.execution.SimpleInlineProgramExecutionIT@4f970963]" name="testSimpleStringProgramWithExpectedResult" duration-ms="18" started-at="2017-03-29T21:22:06Z" data-provider="programWithExpectedResult" finished-at="2017-03-29T21:22:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[test]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleStringProgramWithExpectedResult -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.execution.SimpleInlineProgramExecutionIT@4f970963]" name="beforeMethod" is-config="true" duration-ms="15" started-at="2017-03-29T21:22:06Z" finished-at="2017-03-29T21:22:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testSimpleStringProgramWithExpectedResult(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.execution.SimpleInlineProgramExecutionIT@4f970963]" name="testSimpleStringProgramWithExpectedResult" duration-ms="40" started-at="2017-03-29T21:22:06Z" data-provider="programWithExpectedResult" finished-at="2017-03-29T21:22:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hello
world]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hello
world]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleStringProgramWithExpectedResult -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.execution.SimpleInlineProgramExecutionIT@4f970963]" name="beforeMethod" is-config="true" duration-ms="29" started-at="2017-03-29T21:22:06Z" finished-at="2017-03-29T21:22:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testSimpleStringProgramWithExpectedResult(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.execution.SimpleInlineProgramExecutionIT@4f970963]" name="testSimpleStringProgramWithExpectedResult" duration-ms="195" started-at="2017-03-29T21:22:06Z" data-provider="programWithExpectedResult" finished-at="2017-03-29T21:22:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[# for (int i = 0; i < 3; ++i)
${i}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[012]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleStringProgramWithExpectedResult -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.execution.SimpleInlineProgramExecutionIT@4f970963]" name="beforeMethod" is-config="true" duration-ms="46" started-at="2017-03-29T21:22:07Z" finished-at="2017-03-29T21:22:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testSimpleStringProgramWithExpectedResult(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.execution.SimpleInlineProgramExecutionIT@4f970963]" name="testSimpleStringProgramWithExpectedResult" duration-ms="84" started-at="2017-03-29T21:22:07Z" data-provider="programWithExpectedResult" finished-at="2017-03-29T21:22:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[# for (int i = 0; i < 3; ++i) { 
${i}
 # }]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0
1
2
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleStringProgramWithExpectedResult -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.execution.SimpleInlineProgramExecutionIT@4f970963]" name="beforeMethod" is-config="true" duration-ms="15" started-at="2017-03-29T21:22:07Z" finished-at="2017-03-29T21:22:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testSimpleStringProgramWithExpectedResult(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.execution.SimpleInlineProgramExecutionIT@4f970963]" name="testSimpleStringProgramWithExpectedResult" duration-ms="45" started-at="2017-03-29T21:22:07Z" data-provider="programWithExpectedResult" finished-at="2017-03-29T21:22:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[${currentClass.getElementName()}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mockName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleStringProgramWithExpectedResult -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.execution.SimpleInlineProgramExecutionIT@4f970963]" name="beforeMethod" is-config="true" duration-ms="21" started-at="2017-03-29T21:22:07Z" finished-at="2017-03-29T21:22:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testSimpleStringProgramWithExpectedResult(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.execution.SimpleInlineProgramExecutionIT@4f970963]" name="testSimpleStringProgramWithExpectedResult" duration-ms="37" started-at="2017-03-29T21:22:07Z" data-provider="programWithExpectedResult" finished-at="2017-03-29T21:22:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[currentClass.getElementName()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[currentClass.getElementName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleStringProgramWithExpectedResult -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.execution.SimpleInlineProgramExecutionIT@4f970963]" name="beforeMethod" is-config="true" duration-ms="19" started-at="2017-03-29T21:22:07Z" finished-at="2017-03-29T21:22:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testSimpleStringProgramWithExpectedResult(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.execution.SimpleInlineProgramExecutionIT@4f970963]" name="testSimpleStringProgramWithExpectedResult" duration-ms="42" started-at="2017-03-29T21:22:07Z" data-provider="programWithExpectedResult" finished-at="2017-03-29T21:22:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[#result.append("hey")]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hey]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleStringProgramWithExpectedResult -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.execution.SimpleInlineProgramExecutionIT@4f970963]" name="beforeMethod" is-config="true" duration-ms="13" started-at="2017-03-29T21:22:07Z" finished-at="2017-03-29T21:22:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testSimpleStringProgramWithExpectedResult(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.execution.SimpleInlineProgramExecutionIT@4f970963]" name="testSimpleStringProgramWithExpectedResult" duration-ms="134" started-at="2017-03-29T21:22:07Z" data-provider="programWithExpectedResult" finished-at="2017-03-29T21:22:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[#String test = "hey";
 # result.append(test)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hey]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleStringProgramWithExpectedResult -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.execution.SimpleInlineProgramExecutionIT@4f970963]" name="beforeMethod" is-config="true" duration-ms="24" started-at="2017-03-29T21:22:07Z" finished-at="2017-03-29T21:22:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testSimpleStringProgramWithExpectedResult(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.execution.SimpleInlineProgramExecutionIT@4f970963]" name="testSimpleStringProgramWithExpectedResult" duration-ms="22" started-at="2017-03-29T21:22:07Z" data-provider="programWithExpectedResult" finished-at="2017-03-29T21:22:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[This is the ${currentClass.getElementName()} class]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[This is the mockName class]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleStringProgramWithExpectedResult -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.execution.SimpleInlineProgramExecutionIT@4f970963]" name="beforeMethod" is-config="true" duration-ms="8" started-at="2017-03-29T21:22:07Z" finished-at="2017-03-29T21:22:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testSimpleStringProgramWithExpectedResult(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.execution.SimpleInlineProgramExecutionIT@4f970963]" name="testSimpleStringProgramWithExpectedResult" duration-ms="18" started-at="2017-03-29T21:22:07Z" data-provider="programWithExpectedResult" finished-at="2017-03-29T21:22:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[#if (currentClass.getElementName().equals("mockName")) { 
True
 # }]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[True
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleStringProgramWithExpectedResult -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.execution.SimpleInlineProgramExecutionIT@4f970963]" name="beforeMethod" is-config="true" duration-ms="7" started-at="2017-03-29T21:22:07Z" finished-at="2017-03-29T21:22:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testSimpleStringProgramWithExpectedResult(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.execution.SimpleInlineProgramExecutionIT@4f970963]" name="testSimpleStringProgramWithExpectedResult" duration-ms="41" started-at="2017-03-29T21:22:07Z" data-provider="programWithExpectedResult" finished-at="2017-03-29T21:22:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[#if (!currentClass.getElementName().equals("mockName")) {
True
 # } else {
False
#}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[False
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleStringProgramWithExpectedResult -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.execution.SimpleInlineProgramExecutionIT@4f970963]" name="beforeMethod" is-config="true" duration-ms="8" started-at="2017-03-29T21:22:07Z" finished-at="2017-03-29T21:22:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testSimpleStringProgramWithExpectedResult(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.execution.SimpleInlineProgramExecutionIT@4f970963]" name="testSimpleStringProgramWithExpectedResult" duration-ms="61" started-at="2017-03-29T21:22:07Z" data-provider="programWithExpectedResult" finished-at="2017-03-29T21:22:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Is it mockName: ${currentClass.getElementName().equals("mockName") ? "True" : "False" }?]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Is it mockName: True?]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleStringProgramWithExpectedResult -->
      </class> <!-- com.helospark.SparkTemplatingPlugin.integration.execution.SimpleInlineProgramExecutionIT -->
      <class name="com.helospark.SparkTemplatingPlugin.integration.execution.GetterGeneratorExecutionIT">
        <test-method status="PASS" signature="initialize()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.execution.GetterGeneratorExecutionIT@2b9627bc]" name="initialize" is-config="true" duration-ms="1019" started-at="2017-03-29T21:22:03Z" finished-at="2017-03-29T21:22:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGenerateShouldGenerateExpectedResult()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.execution.GetterGeneratorExecutionIT@2b9627bc]" name="testGenerateShouldGenerateExpectedResult" duration-ms="1718" started-at="2017-03-29T21:22:04Z" finished-at="2017-03-29T21:22:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateShouldGenerateExpectedResult -->
      </class> <!-- com.helospark.SparkTemplatingPlugin.integration.execution.GetterGeneratorExecutionIT -->
      <class name="com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.NoSourceCleaningSourceProcessorTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.NoSourceCleaningSourceProcessorTest@887af79]" name="setUp" is-config="true" duration-ms="1" started-at="2017-03-29T21:22:06Z" finished-at="2017-03-29T21:22:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSimple(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.NoSourceCleaningSourceProcessorTest@887af79]" name="testSimple" duration-ms="3" started-at="2017-03-29T21:22:06Z" data-provider="dataProvider" finished-at="2017-03-29T21:22:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[for (int i = 0; i < 10; ++i) {
 System.out.println(i) // this
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[for (int i = 0; i < 10; ++i) {
 System.out.println(i) 
}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimple -->
        <test-method status="PASS" signature="testSimple(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.NoSourceCleaningSourceProcessorTest@887af79]" name="testSimple" duration-ms="3" started-at="2017-03-29T21:22:06Z" data-provider="dataProvider" finished-at="2017-03-29T21:22:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[for (int i = 0; i < 10; ++i) {
 System/*.out*/.println(i) // this
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[for (int i = 0; i < 10; ++i) {
 System.println(i) 
}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimple -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.NoSourceCleaningSourceProcessorTest@887af79]" name="setUp" is-config="true" duration-ms="0" started-at="2017-03-29T21:22:06Z" finished-at="2017-03-29T21:22:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.NoSourceCleaningSourceProcessorTest@887af79]" name="setUp" is-config="true" duration-ms="0" started-at="2017-03-29T21:22:06Z" finished-at="2017-03-29T21:22:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSimple(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.NoSourceCleaningSourceProcessorTest@887af79]" name="testSimple" duration-ms="3" started-at="2017-03-29T21:22:06Z" data-provider="dataProvider" finished-at="2017-03-29T21:22:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[for (int i = 0; i < 10; ++i) {
 System.out.println("i") // this
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[for (int i = 0; i < 10; ++i) {
 System.out.println() 
}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimple -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.NoSourceCleaningSourceProcessorTest@887af79]" name="setUp" is-config="true" duration-ms="0" started-at="2017-03-29T21:22:06Z" finished-at="2017-03-29T21:22:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSimple(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.NoSourceCleaningSourceProcessorTest@887af79]" name="testSimple" duration-ms="3" started-at="2017-03-29T21:22:06Z" data-provider="dataProvider" finished-at="2017-03-29T21:22:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[for (int i = 0; i < 10; ++i) {
 System.out.println('i') // this
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[for (int i = 0; i < 10; ++i) {
 System.out.println() 
}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimple -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.NoSourceCleaningSourceProcessorTest@887af79]" name="setUp" is-config="true" duration-ms="1" started-at="2017-03-29T21:22:06Z" finished-at="2017-03-29T21:22:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSimple(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.NoSourceCleaningSourceProcessorTest@887af79]" name="testSimple" duration-ms="3" started-at="2017-03-29T21:22:06Z" data-provider="dataProvider" finished-at="2017-03-29T21:22:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[for (int i = 0; i < 10; ++i) {
 System.out.println('i') /**/
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[for (int i = 0; i < 10; ++i) {
 System.out.println() 
}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimple -->
        <test-method status="PASS" signature="testSimple(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.NoSourceCleaningSourceProcessorTest@887af79]" name="testSimple" duration-ms="4" started-at="2017-03-29T21:22:06Z" data-provider="dataProvider" finished-at="2017-03-29T21:22:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[//for (int i = 0; i < 10; ++i) {
 System.out.println('i') /**/
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[
 System.out.println() 
}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimple -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.NoSourceCleaningSourceProcessorTest@887af79]" name="setUp" is-config="true" duration-ms="0" started-at="2017-03-29T21:22:06Z" finished-at="2017-03-29T21:22:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSimple(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.NoSourceCleaningSourceProcessorTest@887af79]" name="testSimple" duration-ms="3" started-at="2017-03-29T21:22:06Z" data-provider="dataProvider" finished-at="2017-03-29T21:22:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[for (int i = 0; i < 10; ++i) {
 String a = /* asd" */ "StringContent"
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[for (int i = 0; i < 10; ++i) {
 String a =  
}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimple -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.NoSourceCleaningSourceProcessorTest@887af79]" name="setUp" is-config="true" duration-ms="0" started-at="2017-03-29T21:22:06Z" finished-at="2017-03-29T21:22:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.NoSourceCleaningSourceProcessorTest@887af79]" name="setUp" is-config="true" duration-ms="1" started-at="2017-03-29T21:22:06Z" finished-at="2017-03-29T21:22:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSimple(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.NoSourceCleaningSourceProcessorTest@887af79]" name="testSimple" duration-ms="2" started-at="2017-03-29T21:22:06Z" data-provider="dataProvider" finished-at="2017-03-29T21:22:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[for (int i = 0; i < 10; ++i) {
 String a = /* asd" */"StringContent"
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[for (int i = 0; i < 10; ++i) {
 String a = 
}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimple -->
      </class> <!-- com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.NoSourceCleaningSourceProcessorTest -->
      <class name="com.helospark.SparkTemplatingPlugin.integration.dicontainer.DiContainerTest">
        <test-method status="PASS" signature="testDiContainerInitializeShouldNotThrowAnyExceptions()[pri:0, instance:com.helospark.SparkTemplatingPlugin.integration.dicontainer.DiContainerTest@7b49cea0]" name="testDiContainerInitializeShouldNotThrowAnyExceptions" duration-ms="8" started-at="2017-03-29T21:22:06Z" finished-at="2017-03-29T21:22:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDiContainerInitializeShouldNotThrowAnyExceptions -->
      </class> <!-- com.helospark.SparkTemplatingPlugin.integration.dicontainer.DiContainerTest -->
      <class name="com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.RegexMatchingLocalVariableExtractorTest">
        <test-method status="PASS" signature="testSimple(java.lang.String, java.util.Map)[pri:0, instance:com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.RegexMatchingLocalVariableExtractorTest@5b87ed94]" name="testSimple" duration-ms="11" started-at="2017-03-29T21:22:06Z" data-provider="dataProvider" finished-at="2017-03-29T21:22:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[for (int i = 0; i < 10; ++i);]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{i=int}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimple -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.RegexMatchingLocalVariableExtractorTest@5b87ed94]" name="setUp" is-config="true" duration-ms="0" started-at="2017-03-29T21:22:06Z" finished-at="2017-03-29T21:22:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.RegexMatchingLocalVariableExtractorTest@5b87ed94]" name="setUp" is-config="true" duration-ms="0" started-at="2017-03-29T21:22:06Z" finished-at="2017-03-29T21:22:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSimple(java.lang.String, java.util.Map)[pri:0, instance:com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.RegexMatchingLocalVariableExtractorTest@5b87ed94]" name="testSimple" duration-ms="5" started-at="2017-03-29T21:22:06Z" data-provider="dataProvider" finished-at="2017-03-29T21:22:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Integer asd = 3;
for (asd = 0; i < 10; ++i);]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{asd=Integer}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimple -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.RegexMatchingLocalVariableExtractorTest@5b87ed94]" name="setUp" is-config="true" duration-ms="0" started-at="2017-03-29T21:22:06Z" finished-at="2017-03-29T21:22:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSimple(java.lang.String, java.util.Map)[pri:0, instance:com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.RegexMatchingLocalVariableExtractorTest@5b87ed94]" name="testSimple" duration-ms="4" started-at="2017-03-29T21:22:06Z" data-provider="dataProvider" finished-at="2017-03-29T21:22:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Integer asd = 3;
for (int i = 0; i < 10; ++i);]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{asd=Integer, i=int}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimple -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.RegexMatchingLocalVariableExtractorTest@5b87ed94]" name="setUp" is-config="true" duration-ms="1" started-at="2017-03-29T21:22:06Z" finished-at="2017-03-29T21:22:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSimple(java.lang.String, java.util.Map)[pri:0, instance:com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.RegexMatchingLocalVariableExtractorTest@5b87ed94]" name="testSimple" duration-ms="5" started-at="2017-03-29T21:22:06Z" data-provider="dataProvider" finished-at="2017-03-29T21:22:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Integer asd = 3;
for (int i = 0; i < 10; ++i) {
String h = "a";
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{asd=Integer, h=String, i=int}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimple -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.RegexMatchingLocalVariableExtractorTest@5b87ed94]" name="setUp" is-config="true" duration-ms="0" started-at="2017-03-29T21:22:06Z" finished-at="2017-03-29T21:22:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSimple(java.lang.String, java.util.Map)[pri:0, instance:com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.RegexMatchingLocalVariableExtractorTest@5b87ed94]" name="testSimple" duration-ms="20" started-at="2017-03-29T21:22:06Z" data-provider="dataProvider" finished-at="2017-03-29T21:22:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Integer asd = 3;
for (int i = 0; i < 10; ++i) {
String h;
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{asd=Integer, h=String, i=int}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimple -->
      </class> <!-- com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.RegexMatchingLocalVariableExtractorTest -->
      <class name="com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.InnerBlockRemoverSourceProcessorTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.InnerBlockRemoverSourceProcessorTest@65e2dbf3]" name="setUp" is-config="true" duration-ms="0" started-at="2017-03-29T21:22:06Z" finished-at="2017-03-29T21:22:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSimple(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.InnerBlockRemoverSourceProcessorTest@65e2dbf3]" name="testSimple" duration-ms="15" started-at="2017-03-29T21:22:06Z" data-provider="dataProvider" finished-at="2017-03-29T21:22:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[if () {
  if () { asd }
  if() {
     a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[if () {
  if () 
  if() {
     a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimple -->
        <test-method status="PASS" signature="testSimple(java.lang.String, java.lang.String)[pri:0, instance:com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.InnerBlockRemoverSourceProcessorTest@65e2dbf3]" name="testSimple" duration-ms="21" started-at="2017-03-29T21:22:06Z" data-provider="dataProvider" finished-at="2017-03-29T21:22:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[int a; {
int b; {
   }
}
int b;]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[int a; 
int b;]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimple -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.InnerBlockRemoverSourceProcessorTest@65e2dbf3]" name="setUp" is-config="true" duration-ms="0" started-at="2017-03-29T21:22:06Z" finished-at="2017-03-29T21:22:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- com.helospark.sparktemplatingplugin.ui.editor.completition.chain.sourceprocessor.InnerBlockRemoverSourceProcessorTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
